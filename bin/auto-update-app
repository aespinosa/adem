#/bin/bash!
DIR="$ADEM_HOME"
USER=`whoami`
CDATE=`date +%F-%R`
i=1

Application=$1
VO=$2
SITE_FILE=$3
if [ "X$Application" == "X" ]; then
  {
  echo "It's checking the available application names in the repository..."
  #get the packaged application software from the Pacman cache
  pacman -trust-all-caches -lc $REPOSITORY_HOME > $DIR/logs/deployment/package-list-$CDATE.log && PackagedSoftware=`sed -n '1!p' $DIR/logs/deployment/package-list-$CDATE.log |cut -c9- |cut -d- -f1,2 |sort -u`

  echo "(1-Application)Please input the Application software name to be updated as the first parameter. The already packaged application software are:"
  echo "$PackagedSoftware"
  echo "(2-VO)Please input the Virtual Organization you belong to as the second parameter. For osg, vo can be:"
  echo "CDF CMS CompBioGrid DES DOSAR DZero Engage Fermilab fMRI GADU geant4 GLOW GPN GRASE GridChem GridEx GROW i2u2 iVDGL LIGO mariachi MIS  nanoHUB NWICG  Ops  OSG OSGEDU SDSS STAR USATLAS. For Teragrid, vo just use: teragrid."
  echo "(3-Sites)And please input the grid sites file as the third parameter.Just use a space to separate the two parameters.You can use auto-get-sites to create the available grid sites automatically."
  /bin/rm -rf o..pacman..o 2>/dev/null
  /bin/rm trusted.caches 2>/dev/null
  }
  exit
fi

if [ "X$VO" == "X" ] || [ "X$SITE_FILE" == "X" ]; then
  echo "(2)Please input the Virtual Organization you belong to as the second parameter. For osg, vo can be:"
  echo "CDF CMS CompBioGrid DES DOSAR DZero Engage Fermilab fMRI GADU geant4 GLOW GPN GRASE GridChem GridEx GROW i2u2 iVDGL LIGO mariachi MIS  nanoHUB NWICG  Ops  OSG OSGEDU SDSS STAR USATLAS. For Teragrid, vo just use: teragrid."
  echo "(3)And please input the grid sites file as the third parameter.Just use a space to separate the two parameters.You can use auto-get-sites to create the available grid sites automatically."

  exit
fi

echo "Application software $Application is being updated within $VO Virtual Organization sites......"

for SITE in $(awk '{print $1}' $SITE_FILE)
do
  echo $i
  echo $SITE
  APP=`sed -n "$i"p $SITE_FILE | awk {'print $2'}`
  PACMAN=`sed -n "$i"p $SITE_FILE | awk {'print $3'}`
  Signature=`sed -n "$i"p $SITE_FILE | awk {'print $4'}|cut -d- -f1,2`

  # To create the pacman update script
  if [  -f $DIR/tmp/$Application-update-$SITE.sh ]; then
     rm -f $DIR/tmp/$Application-update-$SITE.sh
  fi

  echo "#/bin/sh" >> $DIR/tmp/$Application-update-$SITE.sh
  echo "cd  $APP/$VO/$USER/work-pac"  >> $DIR/tmp/$Application-update-$SITE.sh
  echo "source $PACMAN/setup.sh"  >> $DIR/tmp/$Application-update-$SITE.sh
  echo "$PACMAN/bin/pacman -clear-lock" >> $DIR/tmp/$Application-update-$SITE.sh
  echo "$PACMAN/bin/pacman -update $Application-$Signature"  >> $DIR/tmp/$Application-update-$SITE.sh

  #make a timestamp for log
  echo "Starting `date`" > $DIR/logs/management/$Application-update-$SITE-$CDATE.log
  echo "Starting `date`" > $DIR/logs/management/$Application-update-$SITE-$CDATE.err

  # To transmit and execute the pacman update script to the given grid site
  #globus-job-run  $SITE  -stage $DIR/tmp/$Application-update-$SITE.sh
  globus-url-copy  file://$DIR/tmp/$Application-update-$SITE.sh  gsiftp://$SITE$APP/$VO/$USER/$Application-update-$SITE.sh 2>>$DIR/logs/management/$Application-update-$SITE-$CDATE.err && globus-job-run  $SITE  /bin/sh $APP/$VO/$USER/$Application-update-$SITE.sh 1>>$DIR/logs/management/$Application-update-$SITE-$CDATE.log 2>>$DIR/logs/management/$Application-update-$SITE-$CDATE.err && echo "Update Ending `date`" >>$DIR/logs/management/$Application-update-$SITE-$CDATE.log || echo "Update Failed `date`" >>$DIR/logs/management/$Application-update-$SITE-$CDATE.log &

  #to delete the tempory update file
  #/bin/rm -f $DIR/tmp/$Application-update-$SITE.sh

  i=`expr $i + 1` 
done
num=`expr $i - 1`

echo "It's still working for the update..."

#automatically check the results (after the update finished on all of the sites)
finishedN=0
while (($finishedN < $num)) ; do

finishedN=`tail -1 $DIR/logs/management/$Application-update-*-$CDATE.log |grep Update |wc -l`
sleep 10
done

echo "The update was finished. You can check the standard output and error messge on each grid site in $DIR/logs/management/$Application-update-SITE-$CDATE.log and $DIR/logs/management/$Application-update-SITE-$CDATE.err"

#confirm the deployment
#echo "Now, it is confirming the successful deployment.Pleas wait a minute..."
#$DIR/bin/auto-check-app $VO $SITE_FILE $Application &

#To record it with the application version into versions-all-record.log 
echo "$CDATE $Application UPDATE on $num sites" >> $DIR/logs/applications/versions-all-record.log

#To recored the command into the commands log file
echo "$CDATE auto-update-app $Application $VO $SITE_FILE" >> $DIR/logs/commands
