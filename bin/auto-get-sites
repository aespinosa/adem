#/bin/bash!
# To get the available grid sites
if [ "X${ADEM_HOME}" == "X" ]; then
    echo "You must set your ADEM_HOME variable! Please source the setup.sh, then continue" 1>&2
fi

CDATE=`date +%F-%R`
DIR="$ADEM_HOME"
USER=`whoami`
# get the grid computing sites
GRID=$1
VO=$2

if [ "X$GRID" == "X" ]; then
  echo "(1-Grid)Please input the GRID name as the first parameter, which can be:"
  echo "osg osg-itb "
  echo "(2-VO)Please input the virtual organization name as the second parameter.Just use a space to separate the two parameters. Otherwise, you will get the the static information of all the registered grid sites. For osg, vo can be:"
  echo "CDF CMS CompBioGrid DES DOSAR DZero Engage Fermilab fMRI GADU geant4 GLOW GPN GRASE GridChem GridEx GROW i2u2 iVDGL LIGO mariachi MIS  nanoHUB NWICG  Ops  OSG OSGEDU SDSS STAR USATLAS"
  exit 
fi

if [ "X$VO" != "X" ]; then
 {
 /usr/bin/wget -O $DIR/logs/sites/.$GRID-$VO-sitelist-$CDATE.log "http://vors.grid.iu.edu/cgi-bin/tindex.cgi?grid=$GRID&VO=$VO" 1>/dev/null 2>/dev/null
 }
else
 { /usr/bin/wget -O $DIR/logs/sites/.$GRID-sitelist.txt "http://vors.grid.iu.edu/cgi-bin/tindex.cgi?grid=$GRID" 1>/dev/null 2>/dev/null 
  exit
 }
fi
 
/bin/cat $DIR/logs/sites/.$GRID-$VO-sitelist-$CDATE.log |grep compute |grep PASS |awk -F, {'print $3'} > $DIR/logs/sites/$GRID-$VO-compute-sites-$CDATE.log

# authentication tests for the computing sites
n=0
for i in $(/bin/awk -F: '{print $1}' $DIR/logs/sites/$GRID-$VO-compute-sites-$CDATE.log)
do
  globusrun -a -r $i/jobmanager-fork 1>/dev/null && echo $i >>  $DIR/logs/sites/$GRID-$VO-sites-authentication-success-$CDATE.txt & 
  n=`expr $n + 1`
done
echo "It's waiting for the authentication tests results. A few seconds please!"
n=`expr $n / 10`
n=`expr $n + 10`
sleep $n

# Grid ftp tests?
#globus-url-copy gsiftp://$remote/$globus_location/libexec/globus-sh-tools-vars.sh file:/tmp/remoteXXXXXX

CACHE=$DIR/bin/.osg-sites.cache

# Get the available information from the Grid sites cache file
m=0 
n=0
if [ -f  $DIR/logs/sites/$GRID-$VO-sites-authentication-success-$CDATE.txt ]; then
 for SITE in $(cat $DIR/logs/sites/$GRID-$VO-sites-authentication-success-$CDATE.txt)
 do
  avails=`/bin/grep $SITE $CACHE`
  if [ "X$avails" != "X" ]; then
  echo "$avails" >> $DIR/logs/sites/$GRID-$VO-avail-sites-$CDATE.txt &&  m=`expr $m + 1`  
  else
  echo $SITE  >> $DIR/logs/sites/$GRID-$VO-new-possible-avail-sites-$CDATE.txt && n=`expr $n + 1`
  fi
 done
 #If it is the first time, To make a new work directory in $APP for software deployment and a new work directory in $DATA for application execution
 history=`grep auto-get-sites  $DIR/logs/commands 2>/dev/null |wc -l`
 ACACHE=$DIR/logs/sites/$GRID-$VO-avail-sites-$CDATE.txt

  if [ $history == 0 ]; then
  {
   s=1
   for SITE in $(/bin/awk '{print $1}' $ACACHE )
   do
     # if [ $s != 1 ];then
     APP=`sed -n "$s"p $ACACHE | awk {'print $2'}`
     DATA=`sed -n "$s"p $ACACHE | awk {'print $5'}`
     globus-job-run $SITE /bin/mkdir -p $APP/$VO/$USER/work-pac 2>/dev/null &
     globus-job-run $SITE /bin/mkdir -p $DATA/$VO/$USER 2>/dev/null &
     #fi
     s=`expr $s + 1`
   done
  }
  fi

  echo "Now it's $CDATE.Altogether,there are $m available grid sites in the cache(started from OSG VO)."
  echo "The available sites file for the application deployment is: $DIR/logs/sites/$GRID-$VO-avail-sites-$CDATE.txt"
  echo "The property information of new possible grid sites are being checked in the background and will be added into the CACHE file after confirmation."
else
  echo "Now it's $CDATE. Check your account and env. variables, no available information!"
fi

#invoke the sites cache and .swift-sites.xml update process
$DIR/bin/auto-update-sites $GRID $VO $DIR/logs/sites/$GRID-$VO-avail-sites-$CDATE.txt $DIR/logs/sites/$GRID-$VO-new-possible-avail-sites-$CDATE.txt 2>/dev/null &

#To record it in the osg-sites-all-record.log
echo "$CDATE  $m available grid sites; $n new possible grid sites with successful authentication." >> $DIR/logs/sites/osg-sites-all-record.log

#To recored the command into the commands log file
echo "$CDATE auto-get-sites $1 $2" >> $DIR/logs/commands
